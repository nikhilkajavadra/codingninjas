Sort an array A using Quick Sort.
Change in the input array itself. So no need to return or print anything.


Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)
Constraints :
1 <= n <= 10^3
Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8
Sample Input 2 :
5
1 5 2 7 3
Sample Output 2 :
1 2 3 5 7 

____________________________________________________
CODE:


int partition(int input[],int size){
int s=input[0],cnt=0;
for(int i=1;i<size;i++){
	if(input[i]<s){
		cnt++;
	}
}
input[0]=input[cnt];
input[cnt]=s;
return cnt;
}
void quickSort(int input[], int size) {
	if(size<=1){
		return;
	}
	int c=partition(input,size);
	int i=0,j=size-1;
	while(i<c && j>c){
		if(input[i]>=input[c]){
			if(input[j]<input[c]){
				int temp=input[i];
				input[i]=input[j];
				input[j]=temp;
				i++;
				j--;
			}
			else{
				j--;
			}
		}
		else{
			i++;
		}
	}
	quickSort(input,c);
	quickSort(input+(c+1),size-c-1);

}
